27강 try-catch

기본 assert / revert / require과 달리, 오류가 나도 프로그램이 종료되지 않는다.

try/catch문 안에서 오류(assert/ rev... 등)가 나면 핸들링이 불가능하고
밖에서 오류가 나면 catch로 핸들링 할 수 있다.

Panic은 0.8.1 버전 부터 존재한다.

3가지 catch가 존재한다.
- catch Error(string memory reason): revert나 require을 통해 생성된 에러 캐치.
- catch Panic(uint errorCode): assert를 통해 생성된 에러 캐치.
- catch(bytesmemoryLowLevelData): 로우 레벨 에러 캐치.

Panic의 errorCode 는 solidity 정의 panic error의 16진코드를 10진법으로 바꾼 값을 리턴한다.
ex) [code27-1]

어디서 사용하는가?
외부 스마트 컨트랙트 함수를 부를 때, (다른 스마트 컨트랙트를 인스턴스화해서 그 멤버함수 중 try/catch 함수를 사용할 때 (?))
외부 스마트 컨트랙트를 생성할 때, (다른 스마트 컨트랙트를 인스턴스화 할 때 사용)
스마트 컨트랙트 내부에서 this를 통해 try/catch를 쓸 때.